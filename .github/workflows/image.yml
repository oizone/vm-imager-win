# This is a basic workflow to help you get started with Actions

name: Build VM image

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      isourl:
        description: 'base64 of URL of Windows ISO to build'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: lab-label

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set secrets to param files
        run: |
          ./set-param.sh credentials.json VCENTER_NAME "${{ secrets.VCENTER_NAME }}"
          ./set-param.sh credentials.json VCENTER_USER "${{ secrets.VCENTER_USER }}"
          ./set-param.sh credentials.json VCENTER_PASSWORD "${{ secrets.VCENTER_PASSWORD }}"
          ./set-param.sh credentials AWS_ACCESS_KEY "${{ secrets.AWS_ACCESS_KEY }}"
          ./set-param.sh credentials AWS_SECRET_KEY "${{ secrets.AWS_SECRET_KEY }}"
          find autounattend -name autounattend.xml -exec ./set-param.sh {} STANDARD_KEY_2016 "${{ secrets.STANDARD_KEY_2016 }}" \;
          find autounattend -name autounattend.xml -exec ./set-param.sh {} DATACENTER_KEY_2016 "${{ secrets.DATACENTER_KEY_2016 }}" \;
          find autounattend -name autounattend.xml -exec ./set-param.sh {} STANDARD_KEY_2019 "${{ secrets.STANDARD_KEY_2019 }}" \;
          find autounattend -name autounattend.xml -exec ./set-param.sh {} DATACENTER_KEY_2019 "${{ secrets.DATACENTER_KEY_2019 }}" \;
          mkdir -p ~/.aws
          mv credentials ~/.aws/
      - name: Create image
        run: |
          ISOURL=`echo ${{ github.event.inputs.isourl }}|base64 -d`
          #ISOURL="${{ secrets.ISOURL }}"
          ./build-win.sh "${ISOURL}"


